{"ast":null,"code":"import _toConsumableArray from\"D:/T/online-store/search-for-books/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"D:/T/online-store/search-for-books/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/T/online-store/search-for-books/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";var GOOGLE_KEY=process.env.REACT_APP_SECRET_GOOGLE_API_KEY;//create global Variables\nvar fetchVariables=function fetchVariables(booksStore,maxResults,startIndex,subjectCategory,orderBy){//calculate our maxResults if request are low\n// (for example: 47 books all, we call them by our maxRequest,\n// but our first enter it's maxRequest=15 for correct we calculate)\nvar newMaxIndex=function newMaxIndex(){if(Number(booksStore.books.totalItems)-Number(maxResults)-Number(startIndex)<0){console.log(Number(booksStore.books.totalItems)-Number(startIndex));return maxResults=\"\".concat(Number(booksStore.books.totalItems)-Number(startIndex));}else{return maxResults;}};//set Category type\nvar setCategory=function setCategory(){return subjectCategory?\"+subject:\".concat(subjectCategory):\"\";};newMaxIndex();//set api maxResults\nvar maxResultsApi=\"&maxResults=\".concat(maxResults);//set api startIndex\nvar startIndexApi=\"&startIndex=\".concat(startIndex);//set Order by, default:relevance\nvar orderByApi=\"&orderBy=\".concat(orderBy);return{maxResultsApi:maxResultsApi,startIndexApi:startIndexApi,setCategory:setCategory,orderByApi:orderByApi};};//Create our GoogleAPI request using axios and return our response\n//Beginning setLoader\nvar setLineRequestAndGetData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(searchQuery,booksStore,orderBy,subjectCategory,maxResults,startIndex){var fetchVars;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:fetchVars=fetchVariables(booksStore,maxResults,startIndex,subjectCategory,orderBy);//Return our response => on out change data(response.data) //(use +`${}` for better reading)\n_context.next=3;return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+\"\".concat(searchQuery)+\"\".concat(fetchVars.setCategory())+\"\".concat(fetchVars.orderByApi)+\"\".concat(fetchVars.maxResultsApi)+\"\".concat(fetchVars.startIndexApi)+\"&key=\".concat(GOOGLE_KEY));case 3:return _context.abrupt(\"return\",_context.sent);case 4:case\"end\":return _context.stop();}},_callee);}));return function setLineRequestAndGetData(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();//call our books first time 10 books 1 request\nexport var fetchBooksFirstTime=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(searchQuery,booksStore){var orderBy,subjectCategory,maxResults,startIndex,_args2=arguments;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:orderBy=_args2.length>2&&_args2[2]!==undefined?_args2[2]:\"relevance\";subjectCategory=_args2.length>3&&_args2[3]!==undefined?_args2[3]:\"\";maxResults=_args2.length>4&&_args2[4]!==undefined?_args2[4]:\"10\";startIndex=_args2.length>5&&_args2[5]!==undefined?_args2[5]:\"0\";try{booksStore.setIsLoading(true);//cleanup our list of books\nbooksStore.setBooks({});//call our delegation function and get response data back\nsetLineRequestAndGetData(searchQuery,booksStore,orderBy,subjectCategory,maxResults,startIndex).then(function(response){booksStore.setBooks(response.data);booksStore.setIsLoading(false);});}catch(e){console.log(e);}case 5:case\"end\":return _context2.stop();}},_callee2);}));return function fetchBooksFirstTime(_x7,_x8){return _ref2.apply(this,arguments);};}();//Add book to our exists 10 books\nexport var fetchAddingBooks=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(searchQuery,booksStore){var orderBy,subjectCategory,maxResults,startIndex,_args3=arguments;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:orderBy=_args3.length>2&&_args3[2]!==undefined?_args3[2]:\"relevance\";subjectCategory=_args3.length>3&&_args3[3]!==undefined?_args3[3]:\"\";maxResults=_args3.length>4&&_args3[4]!==undefined?_args3[4]:\"10\";startIndex=_args3.length>5&&_args3[5]!==undefined?_args3[5]:\"10\";try{booksStore.setIsLoading(true);if(Number(booksStore.books.totalItems)-Number(startIndex)>0){//call our delegation function and get response data back\nsetLineRequestAndGetData(searchQuery,booksStore,orderBy,subjectCategory,maxResults,startIndex).then(function(response){//spread old list and add new list then push new data to Store. Mobx set new Proxy for elements\nresponse.data.items=[].concat(_toConsumableArray(booksStore.books.items),_toConsumableArray(response.data.items));booksStore.setBookChangeList(response.data);//change to number(STartIndex and maxResults) our Start Index and set new Index\nbooksStore.setStartIndexFetchApi(\"\".concat(Number(booksStore.startIndexFetchApi)+Number(maxResults)));booksStore.setIsLoading(false);});}else{booksStore.setIsLoading(false);}}catch(e){console.log(e);}case 5:case\"end\":return _context3.stop();}},_callee3);}));return function fetchAddingBooks(_x9,_x10){return _ref3.apply(this,arguments);};}();// getting on book by id using it for render BookPage\nexport var fetchOneBook=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(BookId){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return axios.get(\"https://www.googleapis.com/books/v1/volumes/\\n            \".concat(BookId,\"?key=AIzaSyBGsfkXWsf_vXKf3SrvDmjByo0XQ3LvZuM\"));case 3:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 10:case\"end\":return _context4.stop();}},_callee4,null,[[0,7]]);}));return function fetchOneBook(_x11){return _ref4.apply(this,arguments);};}();","map":{"version":3,"names":["axios","GOOGLE_KEY","process","env","REACT_APP_SECRET_GOOGLE_API_KEY","fetchVariables","booksStore","maxResults","startIndex","subjectCategory","orderBy","newMaxIndex","Number","books","totalItems","console","log","concat","setCategory","maxResultsApi","startIndexApi","orderByApi","setLineRequestAndGetData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchQuery","fetchVars","wrap","_callee$","_context","prev","next","get","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","fetchBooksFirstTime","_ref2","_callee2","_args2","_callee2$","_context2","length","undefined","setIsLoading","setBooks","then","response","data","e","_x7","_x8","fetchAddingBooks","_ref3","_callee3","_args3","_callee3$","_context3","items","_toConsumableArray","setBookChangeList","setStartIndexFetchApi","startIndexFetchApi","_x9","_x10","fetchOneBook","_ref4","_callee4","BookId","_callee4$","_context4","t0","_x11"],"sources":["D:/T/online-store/search-for-books/client/src/api/fetchingApi.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport BooksStore from \"../store/BooksStore\";\r\n\r\nconst GOOGLE_KEY: string | undefined = process.env.REACT_APP_SECRET_GOOGLE_API_KEY\r\n\r\ninterface returnFetchVaribles {\r\n    maxResultsApi: string,\r\n    startIndexApi: string,\r\n    setCategory: () => string,\r\n    orderByApi: string\r\n\r\n}\r\n\r\n//create global Variables\r\nconst fetchVariables = (booksStore: BooksStore, maxResults: string, startIndex: string,\r\n                        subjectCategory: string, orderBy: string): returnFetchVaribles => {\r\n\r\n    //calculate our maxResults if request are low\r\n    // (for example: 47 books all, we call them by our maxRequest,\r\n    // but our first enter it's maxRequest=15 for correct we calculate)\r\n    const newMaxIndex = () => {\r\n        if (Number(booksStore.books.totalItems) - Number(maxResults) - Number(startIndex) < 0) {\r\n            console.log(Number(booksStore.books.totalItems) - Number(startIndex))\r\n            return maxResults = `${Number(booksStore.books.totalItems) - Number(startIndex)}`\r\n        } else {\r\n            return maxResults\r\n        }\r\n    }\r\n    //set Category type\r\n    let setCategory = (): string => {\r\n        return subjectCategory\r\n            ? `+subject:${subjectCategory}`\r\n            : \"\";\r\n    }\r\n\r\n    newMaxIndex()\r\n    //set api maxResults\r\n    let maxResultsApi = `&maxResults=${maxResults}`\r\n    //set api startIndex\r\n    let startIndexApi = `&startIndex=${startIndex}`\r\n    //set Order by, default:relevance\r\n    let orderByApi: string = `&orderBy=${orderBy}`\r\n    return {maxResultsApi, startIndexApi, setCategory, orderByApi} as returnFetchVaribles\r\n}\r\n\r\n//Create our GoogleAPI request using axios and return our response\r\n//Beginning setLoader\r\nconst setLineRequestAndGetData = async (searchQuery: string, booksStore: BooksStore,\r\n                                        orderBy: string, subjectCategory: string,\r\n                                        maxResults: string, startIndex: string) => {\r\n\r\n    const fetchVars = fetchVariables(booksStore, maxResults, startIndex, subjectCategory, orderBy)\r\n\r\n    //Return our response => on out change data(response.data) //(use +`${}` for better reading)\r\n    return await axios.get(\r\n        `https://www.googleapis.com/books/v1/volumes?q=`\r\n        + `${searchQuery}`\r\n        + `${fetchVars.setCategory()}`\r\n        + `${fetchVars.orderByApi}`\r\n        + `${fetchVars.maxResultsApi}`\r\n        + `${fetchVars.startIndexApi}`\r\n        + `&key=${GOOGLE_KEY}`)\r\n}\r\n\r\n//call our books first time 10 books 1 request\r\nexport const fetchBooksFirstTime = async (searchQuery: string, booksStore: BooksStore,\r\n                                          orderBy = \"relevance\", subjectCategory = \"\",\r\n                                          maxResults = \"10\", startIndex = \"0\") => {\r\n\r\n    try {\r\n\r\n        booksStore.setIsLoading(true)\r\n        //cleanup our list of books\r\n        booksStore.setBooks({})\r\n            //call our delegation function and get response data back\r\n            setLineRequestAndGetData(searchQuery, booksStore, orderBy, subjectCategory, maxResults, startIndex)\r\n                .then(response => {\r\n                        booksStore.setBooks(response.data)\r\n                        booksStore.setIsLoading(false)\r\n                    }\r\n                )\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\n//Add book to our exists 10 books\r\nexport const fetchAddingBooks = async (searchQuery: string, booksStore: BooksStore,\r\n                                       orderBy = \"relevance\", subjectCategory = \"\",\r\n                                       maxResults = \"10\", startIndex = \"10\") => {\r\n\r\n    try {\r\n        booksStore.setIsLoading(true)\r\n\r\n        if (Number(booksStore.books.totalItems) - Number(startIndex)>0) {\r\n\r\n            //call our delegation function and get response data back\r\n            setLineRequestAndGetData(searchQuery, booksStore, orderBy, subjectCategory, maxResults, startIndex)\r\n                .then(response => {\r\n                        //spread old list and add new list then push new data to Store. Mobx set new Proxy for elements\r\n                        response.data.items = [...booksStore.books.items as [], ...response.data.items]\r\n                        booksStore.setBookChangeList(response.data)\r\n\r\n                        //change to number(STartIndex and maxResults) our Start Index and set new Index\r\n                        booksStore.setStartIndexFetchApi(`${Number(booksStore.startIndexFetchApi) + Number(maxResults)}`)\r\n                        booksStore.setIsLoading(false)\r\n                    }\r\n                )\r\n        } else {\r\n            booksStore.setIsLoading(false)\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n// getting on book by id using it for render BookPage\r\nexport const fetchOneBook = async (BookId: string | undefined) => {\r\n    try {\r\n        let response = await axios.get(\r\n            `https://www.googleapis.com/books/v1/volumes/\r\n            ${BookId}?key=AIzaSyBGsfkXWsf_vXKf3SrvDmjByo0XQ3LvZuM`)\r\n        return (response.data)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}