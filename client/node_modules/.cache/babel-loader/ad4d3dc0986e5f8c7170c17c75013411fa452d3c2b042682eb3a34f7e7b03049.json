{"ast":null,"code":"var _jsxFileName = \"D:\\\\T\\\\online-store\\\\search-for-books\\\\client\\\\src\\\\components\\\\booksComponent\\\\BooksList\\\\LoadMore.tsx\";\nimport React from 'react';\nimport { Row } from \"react-bootstrap\";\nimport { fetchAddingBooks } from \"../../../api/fetchingApi\";\nimport Loader from \"../../loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadMore = _ref => {\n  let {\n    checkTotalItems,\n    booksStore,\n    hidden,\n    className\n  } = _ref;\n  const totalItemsBook = booksStore.books.totalItems;\n  const startIndexFetchApi = booksStore.startIndexFetchApi;\n  //axios request\n  const chunkRequest15 = () => {\n    return fetchAddingBooks(booksStore.searchQuery, booksStore, booksStore.optionRelevance, booksStore.subjectCategory, \"15\", startIndexFetchApi);\n  };\n  //Load by 15 books request 2 time = 30 books in full request\n  //it's this will speed up the rendering of elements but Google API limit 1000 per day\n  const loadMoreBooks = () => {\n    chunkRequest15().then(() => {\n      chunkRequest15().then(() => {\n        hidden = false;\n      });\n    });\n  };\n  //text number of unloaded books\n  let unloaded = Number(totalItemsBook) - Number(startIndexFetchApi);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: checkTotalItems ? /*#__PURE__*/_jsxDEV(Row, {\n      className: `load_more_button ${className}`,\n      onClick: () => loadMoreBooks(),\n      children: [booksStore.isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {\n        hidden: hidden,\n        className: \"load_more_text\",\n        children: [\"Load more books\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, this), unloaded >= 0 ? `Remaining unloaded books: \n                            ${Number(totalItemsBook) - Number(startIndexFetchApi)}` : `No more books`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = LoadMore;\nexport default LoadMore;\nvar _c;\n$RefreshReg$(_c, \"LoadMore\");","map":{"version":3,"names":["React","Row","fetchAddingBooks","Loader","jsxDEV","_jsxDEV","LoadMore","_ref","checkTotalItems","booksStore","hidden","className","totalItemsBook","books","totalItems","startIndexFetchApi","chunkRequest15","searchQuery","optionRelevance","subjectCategory","loadMoreBooks","then","unloaded","Number","children","onClick","isLoading","visible","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/T/online-store/search-for-books/client/src/components/booksComponent/BooksList/LoadMore.tsx"],"sourcesContent":["import React from 'react';\r\nimport {Row} from \"react-bootstrap\";\r\nimport BooksStore from \"../../../store/BooksStore\";\r\nimport {fetchAddingBooks} from \"../../../api/fetchingApi\";\r\nimport Loader from \"../../loader/Loader\";\r\n\r\ninterface LoadMoreInterface {\r\n    checkTotalItems: boolean\r\n    booksStore: BooksStore\r\n    hidden: boolean\r\n    className?: string\r\n}\r\n\r\nconst LoadMore: React.FC<LoadMoreInterface> = ({checkTotalItems, booksStore, hidden, className}) => {\r\n\r\n    const totalItemsBook = booksStore.books.totalItems\r\n    const startIndexFetchApi = booksStore.startIndexFetchApi\r\n    //axios request\r\n    const chunkRequest15 = (): Promise<any> => {\r\n        return fetchAddingBooks(booksStore.searchQuery, booksStore,\r\n            booksStore.optionRelevance, booksStore.subjectCategory, \"15\", startIndexFetchApi)\r\n    }\r\n    //Load by 15 books request 2 time = 30 books in full request\r\n    //it's this will speed up the rendering of elements but Google API limit 1000 per day\r\n    const loadMoreBooks = () => {\r\n        chunkRequest15().then(() => {\r\n            chunkRequest15().then(() => {\r\n                hidden = false\r\n            })\r\n        })\r\n\r\n    }\r\n    //text number of unloaded books\r\n    let unloaded = Number(totalItemsBook) - Number(startIndexFetchApi)\r\n\r\n    return (\r\n        <div>\r\n            {checkTotalItems ?\r\n                <Row className={`load_more_button ${className}`} onClick={() => loadMoreBooks()}>\r\n                    {booksStore.isLoading\r\n                        ? <Loader visible={true}/>\r\n                        : \"\"}\r\n                    <p hidden={hidden} className=\"load_more_text\">\r\n                        Load more books<br/>\r\n                        {\r\n                        unloaded>=0\r\n                            ? `Remaining unloaded books: \r\n                            ${Number(totalItemsBook) - Number(startIndexFetchApi)}`\r\n                            : `No more books`\r\n                        }\r\n                    </p>\r\n                </Row>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadMore;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,GAAG,QAAO,iBAAiB;AAEnC,SAAQC,gBAAgB,QAAO,0BAA0B;AACzD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzC,MAAMC,QAAqC,GAAGC,IAAA,IAAsD;EAAA,IAArD;IAACC,eAAe;IAAEC,UAAU;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAE3F,MAAMK,cAAc,GAAGH,UAAU,CAACI,KAAK,CAACC,UAAU;EAClD,MAAMC,kBAAkB,GAAGN,UAAU,CAACM,kBAAkB;EACxD;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAoB;IACvC,OAAOd,gBAAgB,CAACO,UAAU,CAACQ,WAAW,EAAER,UAAU,EACtDA,UAAU,CAACS,eAAe,EAAET,UAAU,CAACU,eAAe,EAAE,IAAI,EAAEJ,kBAAkB,CAAC;EACzF,CAAC;EACD;EACA;EACA,MAAMK,aAAa,GAAGA,CAAA,KAAM;IACxBJ,cAAc,EAAE,CAACK,IAAI,CAAC,MAAM;MACxBL,cAAc,EAAE,CAACK,IAAI,CAAC,MAAM;QACxBX,MAAM,GAAG,KAAK;MAClB,CAAC,CAAC;IACN,CAAC,CAAC;EAEN,CAAC;EACD;EACA,IAAIY,QAAQ,GAAGC,MAAM,CAACX,cAAc,CAAC,GAAGW,MAAM,CAACR,kBAAkB,CAAC;EAElE,oBACIV,OAAA;IAAAmB,QAAA,EACKhB,eAAe,gBACZH,OAAA,CAACJ,GAAG;MAACU,SAAS,EAAG,oBAAmBA,SAAU,EAAE;MAACc,OAAO,EAAEA,CAAA,KAAML,aAAa,EAAG;MAAAI,QAAA,GAC3Ef,UAAU,CAACiB,SAAS,gBACfrB,OAAA,CAACF,MAAM;QAACwB,OAAO,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,GACxB,EAAE,eACR1B,OAAA;QAAGK,MAAM,EAAEA,MAAO;QAACC,SAAS,EAAC,gBAAgB;QAAAa,QAAA,GAAC,iBAC3B,eAAAnB,OAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EAEpBT,QAAQ,IAAE,CAAC,GACJ;AAC/B,8BAA8BC,MAAM,CAACX,cAAc,CAAC,GAAGW,MAAM,CAACR,kBAAkB,CAAE,EAAC,GACpD,eAAc;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAErB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,GACJ;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAEd,CAAC;AAACC,EAAA,GA3CI1B,QAAqC;AA6C3C,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}